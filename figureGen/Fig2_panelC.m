% March 2022 - new panel C

%% Preparing behavioral Panel for figure 2
SAVE_TABLE = 0;

% Load behavior
% Load data saved by analyzeHealthyPtsPerformance__plots.m
% XLS table generated by writeResults2XLS.m
folderName = 'E:\Data_p\ClosedLoopDataset\BEHAV_LINK';
visualPAL_fig_data = load(fullfile(folderName,'dPrimeChange_dataset'),'visualPAL_fig_data');
visualPAL_fig_data = visualPAL_fig_data.visualPAL_fig_data;

PtCellIdx = visualPAL_fig_data.PtCellIdx;
couple_mat = visualPAL_fig_data.couple_mat;
couple_mat_PRUNED = visualPAL_fig_data.couple_mat_PRUNED ;
dprime_change_sleep = visualPAL_fig_data.dprime_change_sleep;
dprime_change_stim = visualPAL_fig_data.dprime_change_stim;
dprime_diff = visualPAL_fig_data.dprime_diff;
N_rec_diff = visualPAL_fig_data.N_rec_diff;
N_falsePos_diff = visualPAL_fig_data.N_falsePos_diff;

% 3 subgroups based on STIM targeting and anatomical area
% subGroup{1} - frontal_well_targeted_stim_pts
% subGroup{2} - posterior_well_targeted_stim_pts
% subGroup{3} - posterior_neg_stim_pts
[subGroup, cmap] = defineSubGroups_stimAnatomy();
global G_targeted; G_targeted = 1;
global G_targeted_diff_anatomy; G_targeted_diff_anatomy = 2;
global G_mixed; G_mixed = 3;
stim_color = cmap(1,:);
SHAM_NIGHT_COLOR = cmap(4,:);

color_i = [];
for ii = 1:size(couple_mat_PRUNED,1)
    for sg_i = 1:3
        if ismember(couple_mat_PRUNED(ii,3),subGroup{sg_i})
            color_i(ii) = sg_i;
        end
    end
end

% Embedding all pts/contacts
filename = 'E:\Data_p\ClosedLoopDataset\stimEffectResults\allContactsStimResults.mat';

mm = matfile(filename);
corticalStimEffectIndices = mm.corticalStimEffectIndices;
color_ind = [];
for ii_p = 1:length(corticalStimEffectIndices.pt_vec)
    for sg_i = 1:3
        if ismember(corticalStimEffectIndices.pt_vec(ii_p),subGroup{sg_i})
            color_ind(ii_p) = sg_i;
        end
    end
end
corticalStimEffectIndices.color_i = color_ind;
corticalStimEffectIndices.pt_num = corticalStimEffectIndices.pt_vec;
clear color_ind

figName = ('Figure2_behavPanelC_behavStats');
f2 = figure('Name', figName,'NumberTitle','off');
% Some WYSIWYG options:
set(gcf,'DefaultAxesFontSize',10);
set(gcf,'DefaultAxesFontName','Arial');
set(gcf,'PaperUnits','centimeters','PaperPosition',[0.2 0.2 19 24.7]); % this size is the maximal to fit on an A4 paper when printing to PDF
set(gcf,'PaperOrientation','portrait');
set(gcf,'Units','centimeters','Position', get(gcf,'paperPosition')+[1 1 0 0]);
colormap('jet');

p_sz_x = 0.2;
p_sz_y = 0.14;
p1 = [0.1,0.4,p_sz_x,p_sz_y];

p_sz_x = 0.2;
p_sz_y = 0.08;
p2 = [0.1,0.58,p_sz_x,p_sz_y];
p3 = [0.1,0.28,p_sz_x,p_sz_y];

x_str = 'Spindle enhancment (normalized)';
    
    str{1} = 'Spindle';
    str{2} = 'enhancment';
    DATA = corticalStimEffectIndices.allSp_prob(:,1);
    CONTROL = corticalStimEffectIndices.allSp_prob(:,2);
    map_index = corticalStimEffectIndices.color_i;
    bins = [-0.35:0.01:0.35];
    
    
    ind_rmv = CONTROL == 0 | DATA == 0;
    map_index(ind_rmv) = [];
    DIFF =  (DATA-CONTROL)./(DATA+CONTROL);
    DIFF(ind_rmv) = [];
    DIFF1 = DIFF(ismember(map_index,[G_targeted, G_targeted_diff_anatomy]));
    DIFF2 = DIFF(map_index == G_mixed);
    
    for ii_p = 2:3
        
        if SAVE_TABLE
            if ii_p == 2 % publication version
                a = DIFF1';
                filename = 'Fig2e1_data_table';
            else
                a = DIFF2';
                filename = 'Fig2e3_data_table';
            end
            b = {'data'};
            data_table = table(a(:),'VariableNames',b);
            outputPubFolder = 'C:\Users\mgeva\Documents\GitHub\closedLoop-pub\figureGen';
            save(fullfile(outputPubFolder,filename),'data_table')
        end
        
        
        if ii_p == 2
            eval(sprintf('axes(''position'',p%d)',ii_p))
            distributionPlot(DIFF1,'color',cmap(G_targeted,:),'xyOri','flipped','showMM',0, 'xValues',1, 'histOpt',0)
            hold all
            plot(median(DIFF1),1,'k+','markersize',5)
        else
            eval(sprintf('axes(''position'',p%d)',ii_p))
            distributionPlot(DIFF2,'color',cmap(G_mixed,:),'xyOri','flipped','showMM',0, 'xValues',1, 'histOpt',0)
            hold all
            plot(median(DIFF2),1,'k+','markersize',5)
            xlabel(x_str)
        end
        alpha(0.7)
        
        plot([0 0],get(gca,'ylim'),'k')
        set(gca,'xlim',[-1, 1],'xtick',[-1,0, 1],'ytick',[]);
        
        YLIM = get(gca,'ylim');
        XLIM = get(gca,'xlim');
        
        [pp1, h] = signrank(DIFF1);
        
        [pp2, h] = signrank(DIFF2);
        
        if ii_p == 1
            ylabel([{'Enhancment'},{'STIM-SHAM (\DeltaProb)'}])
        end
        
        
        [pp3, h] = ranksum(DIFF1,DIFF2);
        strt{1} = str{1};
        strt{2} = sprintf('signrank: group1 - %2.2e, group2 - %2.2e',...
            pp1,pp2);
        strt{3} = sprintf('ranksum: group1-group2 - %2.2e',...
            pp3);
        strt{4} = sprintf('N=%d (synch stim), N = %d (mixed phase)',length(DIFF1),length(DIFF2));
        strt{5} = sprintf('M = %2.2e (synch stim), M = %2.2e (mixed phase)',mean(DIFF1),mean(DIFF2));
        
    end
    
for iiS = 1:length(strt)
    disp(strt{iiS})
end

                   
ii_p = 1;
eval(sprintf('axes(''position'',p%d)',ii_p))

y_str = 'Memory accuracy enhancment';
x_str = 'Spindles rate enhancement';

% Main fig2 - probability after stim vs after sham
STIM = corticalStimEffectIndices.allSp_prob(:,1)';
BASELINE = corticalStimEffectIndices.allSp_prob(:,2)';

% Option B - High correlation, n.s.
% corrR = 0.535, P = 0.073, Spearman - R = 0.508, P = 0.092 
% STIM = corticalStimEffectIndices.allSpEvent(:,4)';
% BASELINE = corticalStimEffectIndices.allSpEvent(:,3)';

indRem = STIM == 0 | BASELINE == 0;
STIM(indRem) = []; BASELINE(indRem) = [];
subj_group = corticalStimEffectIndices.color_i;
DIFF_elec = (STIM-BASELINE)./(STIM+BASELINE);
spindleDIFF_pt_num = corticalStimEffectIndices.pt_num;
spindleDIFF_EXP_num = corticalStimEffectIndices.exp_vec;
spindleDIFF_pt_num(indRem) = [];
spindleDIFF_EXP_num(indRem,:) = [];

x_v = []; y_v = []; DIFF_elec_pt = NaN(1,length(dprime_change_sleep)); Ncouples = [];
clear DIFF_elec_v
SYNC_STIM_ONLY = 0;
for ii_p = 1:length(dprime_change_sleep)
    
    if SYNC_STIM_ONLY
        if color_i(ii_p) == 3
            DIFF_elec_v{ii_p}= [];
            DIFF_elec_pt(ii_p) = NaN;
            continue
        end
    end
    indices = find(couple_mat_PRUNED(ii_p,3) == spindleDIFF_pt_num);
    if (couple_mat_PRUNED(ii_p,3) == 510) % 510 had 2 nights of stimulations
        indices = find(couple_mat_PRUNED(ii_p,3) == spindleDIFF_pt_num &...
                    sum(ismember(spindleDIFF_EXP_num, 'EXP7')')==4 );
    end
    if ~isempty(indices)
        for iii = 1:length(indices)
            DIFF_elec_v{ii_p}(iii) = DIFF_elec(indices(iii));
            %scatter1 = scatter(DIFF_elec_v(iii),scatter_data(ii_p),60,'linewidth',0.5,...
            %    'markeredgecolor','k','markerfacecolor',map(color_i(ii_p),:));
            %scatter1.MarkerFaceAlpha = .5;
            %hold on
            
        end
        
        Ncouples(ii_p) = length(indices);
        DIFF_elec_pt(ii_p) = nanmedian(DIFF_elec_v{ii_p});
        color_map(ii_p,:) = cmap(color_i(ii_p));
        
        %         scatter1 = scatter(DIFF_elec_pt(ii_p),scatter_data(ii_p),60,'linewidth',0.5,'markeredgecolor','k','markerfacecolor',map(color_i(ii_p),:));
        %         scatter1.MarkerFaceAlpha = .5;
        %         hold on
    else
        disp(sprintf('%d - pt %d is missing',ii_p,couple_mat_PRUNED(ii_p,3)))
        DIFF_elec_pt(ii_p) = NaN;
    end
end
[sorted_scatter_data,indices] = sort(visualPAL_fig_data.dprime_diff);
clear sorted_colormap plot_dist 
for ii_p=1:length(visualPAL_fig_data.dprime_diff)
    plot_dist{ii_p} = DIFF_elec_v{indices(ii_p)};
    sorted_colormap{ii_p,:} = cmap(color_i(indices(ii_p)),:);
end
sorted_scatter_data(2) = sorted_scatter_data(2) + eps;
hh = distributionPlot(plot_dist,'xyOri','flipped','xValues',sorted_scatter_data,'color',sorted_colormap, 'histOpt',1.1,'showMM',0);
% hh{2}.Color = 'k';
% hh{2}.LineWidth = 1;
hold on
plot(DIFF_elec_pt, visualPAL_fig_data.dprime_diff,'k+','markersize',5,'linewidth',1)

 if SAVE_TABLE
     a = DIFF_elec_pt';
     b = visualPAL_fig_data.dprime_diff';
     varNames = {'neuralScoreMedian','behavScore'};
     data_table = table(a,b,'VariableNames',varNames);
     filename = 'Fig2e2_data_table';
     outputPubFolder = 'C:\Users\mgeva\Documents\GitHub\closedLoop-pub\figureGen';
     save(fullfile(outputPubFolder,filename),'data_table')
 end
        
scatter_data_noNaN = visualPAL_fig_data.dprime_diff;
scatter_data_noNaN(isnan(DIFF_elec_pt)) = [];
color_map(isnan(DIFF_elec_pt)) = [];
DIFF_elec_pt_noNaN = DIFF_elec_pt;
DIFF_elec_pt_noNaN(isnan(DIFF_elec_pt)) = [];

axis([-1,1,-0.4,0.4])
line(get(gca,'xlim'),zeros(1,2),'color','k')
line(zeros(1,2),get(gca,'ylim'),'color','k')
set(gca,'xtick',[-1:1:1],'ytick',[-0.4:0.4:0.4])
ylabel(y_str)
XLIM = get(gca,'xlim');
YLIM = get(gca,'ylim');
alpha(0.7);

[rho1,pval1] = corrcoef(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:)); % linear
[rho2,pval2] = corr(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:),'Type','Spearman');

disp(['corr',sprintf('R = %2.3f, P = %2.3f, Spearman - R = %2.3f, P = %2.3f ',rho1(2),pval1(2),rho2,pval2)])

P = polyfit(DIFF_elec_pt_noNaN, scatter_data_noNaN,1);
x0 = -0.7; x1 = 1;
xi = linspace(x0,x1);
yi = P(1)*xi+P(2);
hold on
LW = 1;
plot(xi,yi,'k','linewidth',LW)

% REV 2 edit (Jan 2023) - add dotted line for sync-stim patients
scatter_data_noNaN = visualPAL_fig_data.dprime_diff(color_i ~= 3);
DIFF_elec_pt_noNaN = DIFF_elec_pt(color_i ~= 3);

[rho1,pval1] = corrcoef(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:)); % linear
[rho2,pval2] = corr(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:),'Type','Spearman');

disp(['corr for sync patients',sprintf('R = %2.3f, P = %2.3f, Spearman - R = %2.3f, P = %2.3f ',rho1(2),pval1(2),rho2,pval2)])

X = scatter_data_noNaN;
Y = DIFF_elec_pt_noNaN;
P = polyfit(DIFF_elec_pt_noNaN, scatter_data_noNaN,1);
x0 = -1; x1 = 1;
xi = linspace(x0,x1);
yi = P(1)*xi+P(2);
hold on
LW = 1;
plot(xi,yi,'--k','linewidth',LW)


aa = gcf;
set(aa,'renderer','zbuffer');
outputFigureFolder = 'E:\Data_p\ClosedLoopDataset\manuscriptFigures';
res = 400;
eval(['print ', [outputFigureFolder,'\',figName], ' -f', num2str(aa.Number),sprintf(' -dtiff  -r%d',res), '-cmyk' ]); % adding r600 slows down this process significantly!
res = 200;
eval(['print ', [outputFigureFolder,'\',figName], ' -f', num2str(aa.Number),sprintf(' -djpeg  -r%d',res)]); % adding r600 slows down this process significantly!

%%
disp('stats for sync-pts alone')
figure
x_v = []; y_v = []; DIFF_elec_pt = NaN(1,length(dprime_change_sleep)); Ncouples = [];
clear DIFF_elec_v
SYNC_STIM_ONLY = 1;
for ii_p = 1:length(dprime_change_sleep)
    
    if SYNC_STIM_ONLY
        if color_i(ii_p) == 3
            DIFF_elec_v{ii_p}= [];
            DIFF_elec_pt(ii_p) = NaN;
            continue
        end
    end
    indices = find(couple_mat_PRUNED(ii_p,3) == spindleDIFF_pt_num);
    if (couple_mat_PRUNED(ii_p,3) == 510) % 510 had 2 nights of stimulations
        indices = find(couple_mat_PRUNED(ii_p,3) == spindleDIFF_pt_num &...
                    sum(ismember(spindleDIFF_EXP_num, 'EXP7')')==4 );
    end
    if ~isempty(indices)
        for iii = 1:length(indices)
            DIFF_elec_v{ii_p}(iii) = DIFF_elec(indices(iii));
            %scatter1 = scatter(DIFF_elec_v(iii),scatter_data(ii_p),60,'linewidth',0.5,...
            %    'markeredgecolor','k','markerfacecolor',map(color_i(ii_p),:));
            %scatter1.MarkerFaceAlpha = .5;
            %hold on
            
        end
        
        Ncouples(ii_p) = length(indices);
        DIFF_elec_pt(ii_p) = nanmedian(DIFF_elec_v{ii_p});
        color_map(ii_p,:) = cmap(color_i(ii_p));
        
        %         scatter1 = scatter(DIFF_elec_pt(ii_p),scatter_data(ii_p),60,'linewidth',0.5,'markeredgecolor','k','markerfacecolor',map(color_i(ii_p),:));
        %         scatter1.MarkerFaceAlpha = .5;
        %         hold on
    else
        disp(sprintf('%d - pt %d is missing',ii_p,couple_mat_PRUNED(ii_p,3)))
        DIFF_elec_pt(ii_p) = NaN;
    end
end
[sorted_scatter_data,indices] = sort(visualPAL_fig_data.dprime_diff);
clear sorted_colormap plot_dist 
for ii_p=1:length(visualPAL_fig_data.dprime_diff)
    plot_dist{ii_p} = DIFF_elec_v{indices(ii_p)};
    sorted_colormap{ii_p,:} = cmap(color_i(indices(ii_p)),:);
end
sorted_scatter_data(2) = sorted_scatter_data(2) + eps;
hh = distributionPlot(plot_dist,'xyOri','flipped','xValues',sorted_scatter_data,'color',sorted_colormap, 'histOpt',1.1,'showMM',0);
% hh{2}.Color = 'k';
% hh{2}.LineWidth = 1;
hold on
plot(DIFF_elec_pt, visualPAL_fig_data.dprime_diff,'k+','markersize',5,'linewidth',1)

scatter_data_noNaN = visualPAL_fig_data.dprime_diff;
scatter_data_noNaN(isnan(DIFF_elec_pt)) = [];
color_map(isnan(DIFF_elec_pt)) = [];
DIFF_elec_pt_noNaN = DIFF_elec_pt;
DIFF_elec_pt_noNaN(isnan(DIFF_elec_pt)) = [];

axis([-1,1,-0.4,0.4])
line(get(gca,'xlim'),zeros(1,2),'color','k')
line(zeros(1,2),get(gca,'ylim'),'color','k')
set(gca,'xtick',[-1:1:1],'ytick',[-0.4:0.4:0.4])
ylabel(y_str)
XLIM = get(gca,'xlim');
YLIM = get(gca,'ylim');
alpha(0.7);

[rho1,pval1] = corrcoef(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:)); % linear
[rho2,pval2] = corr(DIFF_elec_pt_noNaN(:),scatter_data_noNaN(:),'Type','Spearman');

disp(['corr',sprintf('R = %2.3f, P = %2.3f, Spearman - R = %2.3f, P = %2.3f ',rho1(2),pval1(2),rho2,pval2)])
